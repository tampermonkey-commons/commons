class Aria2Client extends JsonRpcWebSocketClient{constructor(e,t,s=null){super("aria2-client",t),this.token=s,this.requests=new Map,this.eventTarget=new EventTarget}createParams(e=!0){let t=null;null!=this.token&&""!=this.token&&(t="token:"+this.token);var s=[];return e&&null!=t&&s.push(t),s}generateId(){return crypto.randomUUID()}send(e,t,s=null){null==s&&(s=this.generateId());e=new JsonRpcRequest(e,t,s);this.requests.set(s,e),this.webSocket.send(JSON.stringify(e))}getVersion(){var e=this.createParams(!0);this.send("aria2.getVersion",e)}addUri(e,t={},s=null){var r=this.createParams(!0);if("string"==typeof e)r.push([e]);else{if(!Array.isArray(e))return void this.logger.warn("无效的请求参数：uris不是字符串也不是字符串数组");r.push(e)}r.push(t),null!=s&&r.push(s),this.send("aria2.addUri",r)}addUriWithOptions(e,t,s,r,n=null){var i={};null!=t&&(i.dir=t),null!=s&&(i.out=s),null!=r&&(i["all-proxy"]=r),this.addUri(e,i,n)}tellStatus(e,t=null){var s=this.createParams(!0);s.push(e),null!=t&&s.push(t),this.send("aria2.tellStatus",s)}tellStatusWithDefaultKeys(e){this.tellStatus(e,["gid","status","totalLength","completedLength"])}onMessage(e,t,s,r,n){var i=JSON.parse(e);let a=!1;do{if(!i.hasOwnProperty("jsonrpc")){this.logger.warn("缺少字段jsonrpc，不是JSON-RPC报文"),a=!0;break}if("2.0"!=i.jsonrpc){this.logger.warn("JSON-RPC协议版本不是2.0"),a=!0;break}}while(i.hasOwnProperty("method")?this.onRequest(i):i.hasOwnProperty("id")||i.hasOwnProperty("result")||i.hasOwnProperty("error")?this.onResponse(i):(this.logger.warn("未找到id、result、error等字段"),a=!0),0);a&&this.logger.debug("写收到来自服务端 %s 的无效报文："+i,this.name)}onRequest(e){this.logger.debug("接收到请求报文："+e)}onResponse(e){this.logger.debug("接收到响应报文："+e),this.requests.has(e.id)&&(e=this.requests.get(e.id),this.logger.debug("对应的请求报文："+e))}}